<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
  xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
  xmlns:i="jelly:fmt" xmlns:p="/lib/hudson/project">
  <st:include page="../common/choiceParameterCommon.jelly"/>
  <script type="text/javascript">
    // source, references table
    var referencedParameters = Array();
    <j:forEach var="value" items="${it.getReferencedParametersAsArray()}">
        // add the element we want to monitor
        referencedParameters.push("${value}");
    </j:forEach>
    
    if (window.makeStaplerProxy) {
        window.__old__makeStaplerProxy = window.makeStaplerProxy;
        window.makeStaplerProxy = UnoChoice.makeStaplerProxy2;
    }
    var cascadeChoiceParameter = <st:bind value="${it}"/>; // Create Jenkins proxy
    if (window.makeStaplerProxy) {
        window.makeStaplerProxy = window.__old__makeStaplerProxy;
    }
    // find the cascade parameter element
    var divs = jQuery('div[name="parameter"]');
    var parameterElement = null;
    for (var j = 0; j &lt; divs.length ; j++) {
    	var div = divs[j];
    	var hiddenNames = jQuery('input[name="name"]');
    	for (var k = 0; k &lt; hiddenNames.length ; k++) {
    	   if (hiddenNames.get(k).value == '${it.getName()}') {
               var children = div.children;
               for (var l = 0; l &lt; children.length; ++l) {
                   var child = children[l];
                   if (child.getAttribute('name') == 'value' || child.id.indexOf('ecp_') > -1) {
                       parameterElement = child;
                       break;
                   }
               }
           }
    	}
    }
    var cascadeParameter = new UnoChoice.CascadeParameter('${it.getName()}', parameterElement, cascadeChoiceParameter);
    
    for (var i  = 0; i &lt; referencedParameters.length ; ++i) {
        var parameterElement = null;
        var divs = jQuery('div[name="parameter"]');
        for (var j = 0; j &lt; divs.length ; j++) {
        	var div = divs[j];
        	var hiddenNames = findElementsBySelector(div, 'input[name="name"]', false);
        	if (hiddenNames[0].value == referencedParameters[i]) {
        		var children = div.children;
			    for (var k = 0; k &lt; children.length; ++k) {
			        child = children[k];
			        if (child.getAttribute('name') == 'value') {
			            parameterElement = child;
			            break;
			        } else if (child.tagName == 'DIV') {
                        var subValues = findElementsBySelector(child, 'input[name="value"]', false);
                        if (subValues &amp;&amp; subValues.length > 0) {
                            parameterElement = child;
                            break;
                        }
                    } else if (child.getAttribute('type') == 'file') {
                        parameterElement = child;
                        break;
                    }
			    }
        	}
        }
        
        var referencedParameter = new UnoChoice.ReferencedParameter(referencedParameters[i], parameterElement, cascadeParameter);
    }
    
    console.log('Updating cascade of parameter [${it.getName()}] ...');
    cascadeParameter.update();
    
  </script>
</j:jelly>
